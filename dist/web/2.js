(window.__LOADABLE_LOADED_CHUNKS__=window.__LOADABLE_LOADED_CHUNKS__||[]).push([[2],{179:function(t,n,e){"use strict";e.r(n);var o=e(396),r=e.n(o),u=e(397),i=e.n(u),c=e(398),f=e.n(c),s=e(401),p=e.n(s),l=e(402),a=e.n(l),y=e(1),b=e.n(y),m=e(170),h=e(35),_=function(t){function n(){return r()(this,n),f()(this,p()(n).apply(this,arguments))}return a()(n,t),i()(n,[{key:"componentWillMount",value:function(){this.props.fetchUsers()}},{key:"render",value:function(){console.log("this.props: ",this.props);var t=this.props.users;return b.a.createElement("div",null,this.props.users.length>0?t.map(function(t){return b.a.createElement("p",{key:t.id},t.owner.login)}):b.a.createElement("h1",null,"No users"))}}]),n}(y.Component);n.default=Object(m.b)(function(t){return{users:t.users}},{fetchUsers:h.d})(_)},396:function(t,n){t.exports=function(t,n){if(!(t instanceof n))throw new TypeError("Cannot call a class as a function")}},397:function(t,n){function e(t,n){for(var e=0;e<n.length;e++){var o=n[e];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}t.exports=function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}},398:function(t,n,e){var o=e(399),r=e(400);t.exports=function(t,n){return!n||"object"!==o(n)&&"function"!=typeof n?r(t):n}},399:function(t,n){function e(t){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function o(n){return"function"==typeof Symbol&&"symbol"===e(Symbol.iterator)?t.exports=o=function(t){return e(t)}:t.exports=o=function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":e(t)},o(n)}t.exports=o},400:function(t,n){t.exports=function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}},401:function(t,n){function e(n){return t.exports=e=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},e(n)}t.exports=e},402:function(t,n,e){var o=e(403);t.exports=function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(n&&n.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),n&&o(t,n)}},403:function(t,n){function e(n,o){return t.exports=e=Object.setPrototypeOf||function(t,n){return t.__proto__=n,t},e(n,o)}t.exports=e}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,